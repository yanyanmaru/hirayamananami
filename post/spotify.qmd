---
title: "SpotifyをPythonで分析"
format: html
code-fold: false
date: last-modified
toc: true
toc-location: left
lang: ja
---

## やりたいこと


それぞれの楽曲に対して、danceabilityやenergyなど独特の指標を持ったspotifyAPIを利用して、興味のある曲の分析を行ってみたい。

例えば。。。

* **名探偵コナンの主題歌**
    + 主題歌歌手
        - 倉木麻衣・B'z・愛内里菜・BREAKERZ が多い印象。歌手の割合。４者で独占されているのでは？
        - 期間とかもわかるのかな？
    + 曲調の変遷　
        - 昔は切ないラブソング系が多かった印象・最近はパキパキ系が多い印象
        - 差はあるのか？
    + アニメ歌手と映画歌手の違い
        - 映画歌手に関しては当時話題の歌手が多い印象。 
        - アニメ歌手は変遷なく、上で述べた歌手で占めている印象がある。
    + OPとEDの曲調の違い


<br/>

* **K-POPのeasy-listening傾向(特にNew Jeans)**
    + New Jeansからこの傾向が始まったように思われる。
    + easy-listeningって本当にNew Jeansから始まったのかな？→曲調のところで分析できそう
    + New JeansとSpeedって本当に似てるのかな？
    + New Jeansとillitに関しても！

<br/>
  
* **自分のお気に入り曲を操作**
    + お気に入りを抽出して操作が可能なよう。
    + 曲の雰囲気でソートして、自分が飽きないような配置が作れるかも！（分析とは少し違うけど。）→レコメンドで使われる類似度の指標を自分で作るとか！
    + https://speakerdeck.com/takemikami/spotify-api-woshi-tutaaimasule-qu-nole-simifang　これみたいな。

<br/>

## 前準備

```{python}
import pandas as pd
import spotipy
from spotipy.oauth2 import SpotifyClientCredentials
import json
import os
from dotenv import load_dotenv
```

## どうしよっかな〜


```{python}
client_id = os.getenv('SPOTIFY_CLIENT_ID')
client_secret = os.getenv('SPOTIFY_CLIENT_SECRET')
client_credentials_manager = spotipy.oauth2.SpotifyClientCredentials(client_id, client_secret)
spotify = spotipy.Spotify(client_credentials_manager=client_credentials_manager)
playlist_url = 'https://open.spotify.com/playlist/6KfKvkN7YEUFTwJHkczxdb?si=5d285aa4dade4002'
playlist_id = playlist_url.split('/')[-1].split('?')[0]  #プレイリストIDを取得

# プレイリストの楽曲一覧を取得
results = spotify.playlist(playlist_id)
```

```{python}
# プレイリストから曲を取得
def get_to_playlist(playlist_id):
    playlist = spotify.playlist(playlist_id)
    track_ids = []
    for item in playlist['tracks']['items']:
        track = item['track']
        if not track['id'] in track_ids:
            track_ids.append(track['id'])
        else:
            for item in playlist['tracks']['items']:
                track = item['track']
                if not track['id'] in track_ids:
                    track_ids.append(track['id'])
    return track_ids

get_to_playlist(playlist_url.split('/')[-1].split('?')[0])
```

```{python}
music_id = "4zdXDTExh06duqfnyhNx6S"
result = spotify.audio_features(music_id)
result
```