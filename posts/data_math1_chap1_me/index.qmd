---
title: "「データ解析のための数理統計入門」第1章 確率モデル 1.1標本空間"
format:
  html: default
  revealjs:
    output-file: page-reveal.html
    smaller: true
    scrollable: true
    chalkboard: true
    html-math-method: mathjax
code-fold: true
date: last-modified
toc: true
lang: ja
categories:
  - 統計
  - データ解析のための数理統計入門
status: "完了"
---

# 1.1標本空間

## 用語

**試行**：結果が生ずるような行為

**標本空間**($\Omega$)：試行によって起こりうるすべての結果

**事象**：起こりうる結果($\omega$)の集まり

::: {.extra-space3}:::


### 用語の具体例
サイコロを投げる時に出る目について考える。

::: {.extra-space2}:::

サイコロを投げるという行為は**試行**になります。

**標本空間**は試行によって起こりうるすべての結果なので、$\Omega=\{1,2,3,4,5,6\}$

**事象**は起こりうる結果の集まりなので、$\{1,2\},\{2,5\}$のような$\Omega$の部分集合にあたります。

::: {.extra-space3}:::

## 事象と集合

上で挙げた通り、試行による結果（$\omega$）は集合の要素または元に対応する。

::: {.callout-tip}
## $\Omega$と$\omega$

標本空間と結果が`\Omega`（標本空間）`\omega`（結果）になるのは意味が対応しててわかりやすいですね。
:::

::: {.extra-space2}:::

**積事象**：２つの事象$A,B$がともに起こる事象

```{python}
from matplotlib import pyplot as plt
from matplotlib_venn import venn2
import japanize_matplotlib

plt.figure(figsize=(6, 6))

v = venn2(subsets=(2, 2, 1))

v.get_patch_by_id('10').set_color('white')
v.get_patch_by_id('11').set_color('black')
v.get_patch_by_id('01').set_color('white')

v.get_patch_by_id('10').set_alpha(1.0)
v.get_patch_by_id('11').set_alpha(0.3)
v.get_patch_by_id('01').set_alpha(1.0)

v.get_patch_by_id('10').set_edgecolor('black')
v.get_patch_by_id('10').set_linewidth(2)
v.get_patch_by_id('01').set_edgecolor('black')
v.get_patch_by_id('01').set_linewidth(2)

v.get_label_by_id('10').set_text('')
v.get_label_by_id('11').set_text('AかつB(積事象)')
v.get_label_by_id('01').set_text('')

plt.show()
```

::: {.extra-space3}:::


**和事象**：２つの事象$A,B$の少なくともどちらかが起こる事象

```{python}
from matplotlib import pyplot as plt
from matplotlib_venn import venn2
import japanize_matplotlib

plt.figure(figsize=(6, 6))

v = venn2(subsets=(2, 2, 1))

v.get_patch_by_id('10').set_color('black')
v.get_patch_by_id('11').set_color('black')
v.get_patch_by_id('01').set_color('black')

v.get_patch_by_id('10').set_alpha(0.3)
v.get_patch_by_id('11').set_alpha(0.3)
v.get_patch_by_id('01').set_alpha(0.3)

v.get_patch_by_id('10').set_edgecolor('black')
v.get_patch_by_id('10').set_linewidth(2)
v.get_patch_by_id('01').set_edgecolor('black')
v.get_patch_by_id('01').set_linewidth(2)

v.get_label_by_id('10').set_text('')
v.get_label_by_id('11').set_text('AまたはB(和事象)')
v.get_label_by_id('01').set_text('')

plt.show()
```

::: {.extra-space2}:::

積事象・和事象は積集合・和集合にそれぞれ対応している。

$A \cap B = \{x|x\in A かつx\in B\}$,
$A \cup B = \{x|x\in A またはx\in B\}$

::: {.extra-space2}:::

起こりうる結果である事象を集合として捉えるといいって話ですかね。

::: {.extra-space2}:::


**補集合**：$A$の補集合とは、$A$に属さない元の集合で、$A^c$と表す。

**差集合**：$AとB$の差集合とは、$A$に属するが$B$に属さない元の集合で、$A\setminus B$と表す。また$A\setminus B=A\cap B^c$となる。補集合は$A^c=\Omega \setminus A$と表すこともできる。

```{python}
import matplotlib.pyplot as plt
from matplotlib_venn import venn2
import japanize_matplotlib

# 集合の定義
A = set([1, 2, 3, 4])
B = set([3, 4, 5, 6])

# Venn 図の作成
plt.figure(figsize=(6, 6))
venn = venn2([A, B], ('A', 'B'))

venn.get_patch_by_id('10').set_color('black')
venn.get_patch_by_id('11').set_color('white')
venn.get_patch_by_id('01').set_color('white')

venn.get_patch_by_id('11').set_edgecolor('black')
venn.get_patch_by_id('11').set_linewidth(2)
venn.get_patch_by_id('01').set_edgecolor('black')
venn.get_patch_by_id('01').set_linewidth(2)

# 差集合 A - B の部分を強調
for subset in ('10', '11', '01'):
    venn.get_label_by_id(subset).set_text('')
venn.get_label_by_id('10').set_text('A と Bの差集合')

plt.title("差集合")
plt.show()
```

::: {.extra-space2}:::

**排反**：空集合を$\emptyset$とする。$A \cap B=\emptyset$のときAとBは互いに排反であるという。

事象同士に共通部分がないってことですかね。

```{python}
from matplotlib import pyplot as plt
from matplotlib_venn import venn2
import japanize_matplotlib

plt.figure(figsize=(7, 7))

v = venn2(subsets=(2, 2, 0))

v.get_patch_by_id('10').set_color('white')

v.get_patch_by_id('01').set_color('white')

# v.get_patch_by_id('10').set_alpha(0.3)
# v.get_patch_by_id('11').set_alpha(0.3)
# v.get_patch_by_id('01').set_alpha(0.3)

v.get_patch_by_id('10').set_edgecolor('black')
v.get_patch_by_id('10').set_linewidth(2)
v.get_patch_by_id('01').set_edgecolor('black')
v.get_patch_by_id('01').set_linewidth(2)

v.get_label_by_id('10').set_text('')
v.get_label_by_id('01').set_text('')
plt.gca().set_axis_on()
plt.gca().set_facecolor('white')

plt.show()
```

::: {.extra-space2}:::

### 具体例

サイコロを投げる時、偶数の目が出る事象を$A=\{2,4,6\}$、４以上の目が出る事象を$B=\{4,5,6\}$とし、奇数の目が出る事象を$C=\{1,3,5\}$としたとき、

::: {.extra-space2}:::

**和事象**：$A \cap B=\{2,4,6\}$

**積事象**：$A \cup B=\{2,4,5,6\}$

となる。

$A \cap C = \emptyset$より、$A$と$C$は互いに排反である。

::: {.extra-space3}:::
